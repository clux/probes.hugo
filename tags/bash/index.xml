<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on probes</title><link>https://clux.github.io/probes.hugo/tags/bash/</link><description>Recent content in bash on probes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>sszynrae@gmail.com (clux)</managingEditor><webMaster>sszynrae@gmail.com (clux)</webMaster><lastBuildDate>Sun, 31 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://clux.github.io/probes.hugo/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Impersonating kube service accounts</title><link>https://clux.github.io/probes.hugo/post/2019-03-31-impersonating-kube-accounts/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes.hugo/post/2019-03-31-impersonating-kube-accounts/</guid><description>&lt;p>Authenticating with large kubernetes clusters often risks you dealing with complicated provider logic and sometimes policies outside your control.&lt;/p>
&lt;p>While controllers and operators authenticate with service accounts directly, this is only true inside the cluster. That is, unless you can impersonate the service account from outside.&lt;/p></description></item></channel></rss>