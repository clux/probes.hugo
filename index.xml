<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>probes</title><link>https://clux.github.io/probes/</link><description>Recent content on probes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>sszynrae@gmail.com (clux)</managingEditor><webMaster>sszynrae@gmail.com (clux)</webMaster><lastBuildDate>Sun, 27 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://clux.github.io/probes/index.xml" rel="self" type="application/rss+xml"/><item><title>Foaming Campaign Brain</title><link>https://clux.github.io/probes/post/2020-09-27-second-brain/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2020-09-27-second-brain/</guid><description>&lt;p&gt;After 2 years of running a D&amp;amp;D campaign almost every week, my note taking setup reached several breaking points. If you&amp;rsquo;re using &lt;code&gt;OneNote&lt;/code&gt; or another online managed system for tracking notes/cities/npcs/pcs/events, but know how to use programmers tools like &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;code&lt;/code&gt;; boy are there a world of advantages available to you.&lt;/p&gt;
&lt;p&gt;This is a story of my original note talking setup, a comparison between newer technologies, and how I am back to writing markdown in a folder.&lt;/p&gt;</description></item><item><title>Trying out LXDE</title><link>https://clux.github.io/probes/post/2019-07-28-lxde-experiment/</link><pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2019-07-28-lxde-experiment/</guid><description>&lt;p&gt;Despite having been a lazy Cinnamon customer since the Linux Mint days, recently some &lt;a href=&#34;https://old.reddit.com/r/linux_gaming/comments/cii545/linux_input_lag_analysis_v26des_windows_10_1809/&#34;&gt;interesting&lt;/a&gt; benchmarks started &lt;a href=&#34;https://www.reddit.com/r/linux_gaming/comments/c0ly6b/linux_input_lag_analysis7des_tested_windows/&#34;&gt;surfacing&lt;/a&gt; about input lag in various Window Mangagers, and this made me want to experiment a little.&lt;/p&gt;
&lt;p&gt;This is a log of stuff I needed to tweak to get &lt;a href=&#34;https://wiki.archlinux.org/index.php/LXDE&#34;&gt;LXDE&lt;/a&gt; working well.&lt;/p&gt;</description></item><item><title>A generic kubernetes client</title><link>https://clux.github.io/probes/post/2019-06-04-towards-a-generic-kube-client/</link><pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2019-06-04-towards-a-generic-kube-client/</guid><description>&lt;p&gt;It&amp;rsquo;s been about a month since we released &lt;a href=&#34;https://github.com/clux/kube-rs&#34;&gt;&lt;code&gt;kube&lt;/code&gt;&lt;/a&gt;, a new rust client library for kubernetes. We &lt;a href=&#34;https://clux.github.io/probes/post/2019-04-29-rust-on-kubernetes&#34;&gt;covered&lt;/a&gt; the initial release, but it was full of naive optimism and uncertainty. Would the generic setup work with native objects? How far would it extend? Non-standard objects? Patch handling? Event handling? Surely, it&amp;rsquo;d be a fools errand to write an entire client library?&lt;/p&gt;
&lt;p&gt;With the last &lt;code&gt;0.10.0&lt;/code&gt; release, it&amp;rsquo;s now clear that the generic setup extends quite far. Unfortunately, this yak is hairy, even by yak standards.&lt;/p&gt;</description></item><item><title>Kubernetes operators in rust</title><link>https://clux.github.io/probes/post/2019-04-29-rust-on-kubernetes/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2019-04-29-rust-on-kubernetes/</guid><description>&lt;p&gt;When interacting with kubernetes it&amp;rsquo;s generally been standard practice to use either &lt;a href=&#34;https://github.com/kubernetes/client-go&#34;&gt;client-go&lt;/a&gt; via go, or &lt;code&gt;kubectl&lt;/code&gt; via shell.&lt;/p&gt;
&lt;p&gt;While these are good, non-controversial choices, the advancement of client libraries, and smarter openapi bindings, combined with the generics and procedural macros of &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;rust-lang&lt;/a&gt;, it&amp;rsquo;s now quite possible to write fully fledged kube operators, using slim rust kube clients.&lt;/p&gt;</description></item><item><title>Impersonating kube service accounts</title><link>https://clux.github.io/probes/post/2019-03-31-impersonating-kube-accounts/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2019-03-31-impersonating-kube-accounts/</guid><description>&lt;p&gt;Authenticating with large kubernetes clusters often risks you dealing with complicated provider logic and sometimes policies outside your control.&lt;/p&gt;
&lt;p&gt;While controllers and operators authenticate with service accounts directly, this is only true inside the cluster. That is, unless you can impersonate the service account from outside.&lt;/p&gt;</description></item><item><title>Three Way Charms</title><link>https://clux.github.io/probes/post/2019-01-17-three-way-charm/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2019-01-17-three-way-charm/</guid><description>&lt;p&gt;Fighting a CR 13 Vampire at level 7 in total darkness is no easy feat.&lt;/p&gt;</description></item><item><title>Config management in rust</title><link>https://clux.github.io/probes/post/2018-12-15-config-management-in-rust/</link><pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2018-12-15-config-management-in-rust/</guid><description>&lt;p&gt;At &lt;a href=&#34;https://www.babylonhealth.com/&#34;&gt;babylon health&lt;/a&gt; we have a ton of microservices running on kubernetes that are, in turn, controlled by &lt;strong&gt;hundreds of thousands of lines&lt;/strong&gt; of autogenerated &lt;code&gt;yaml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So for our own sanity, we built &lt;a href=&#34;https://github.com/Babylonpartners/shipcat&#34;&gt;&lt;code&gt;shipcat&lt;/code&gt;&lt;/a&gt; - a standardisation tool (powered by &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;rust-lang&lt;/a&gt; and &lt;a href=&#34;https://serde.rs/&#34;&gt;serde&lt;/a&gt;) to control the declarative format and lifecycle of every microservice.&lt;/p&gt;</description></item><item><title>Colemak Switchover</title><link>https://clux.github.io/probes/post/2013-03-20-colemak-switchover/</link><pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2013-03-20-colemak-switchover/</guid><description>&lt;p&gt;&lt;img src=&#34;https://clux.github.io/probes/imgs/colemak.png&#34; alt=&#34;colemak finger layout&#34; /&gt;&lt;/p&gt;</description></item><item><title>Tournament Seeding Placement</title><link>https://clux.github.io/probes/post/2011-03-20-tournament-seeding-placement/</link><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2011-03-20-tournament-seeding-placement/</guid><description>&lt;p&gt;A particularly tricky problem with tournament scheduling that made it into &lt;a href=&#34;https://github.com/clux/duel&#34;&gt;tournament/duel&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Vault of Therayne</title><link>https://clux.github.io/probes/post/2006-08-09-vault-of-therayne/</link><pubDate>Wed, 09 Aug 2006 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/post/2006-08-09-vault-of-therayne/</guid><description>&lt;p&gt;An easter egg for the Dungeon Siege 2 Broken World expansion.&lt;/p&gt;</description></item><item><title>About me</title><link>https://clux.github.io/probes/page/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>sszynrae@gmail.com (clux)</author><guid>https://clux.github.io/probes/page/about/</guid><description>My name is Eirik and this is an attempt to collect my thoughts, and provide the occasional guide to software.
Posts herein are my own opinions and not those of my employer. Words like we or us is often used in the the mathematical (collaborative) sense and does not necessarily mean consensus.
Below contains a bit about who I am, what I have done, and what like to do. Basically, a brief summary and status of various creative and dexterous endeavours that I am generally happy to have spent time on.</description></item></channel></rss>